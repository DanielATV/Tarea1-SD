syntax = "proto3";
package chat;

message Message {
  string body = 1;
}

message Orden {
  string id = 1;
  string producto = 2;
  int32 valor = 3;
  string origen = 4;
  string destino = 5;
  int32  tipo = 6;
}

message Codigo{

    string idcompra = 1;

}

message EstOrden {
    string estado = 1;

}



message Asigcam {
    string idcam = 1;
    string idprod = 2;
}

message Rescam{
    string id =1;
    int32 intentos =2;
    string estado = 3;

}

message Paquete {
  string id = 1;
  string idseg = 2;
  string tipo =3;
  int32 valor =4;
  int32 intentos =5;
  string estado = 6;
  
}


//agregar parametro lo que espera el camion
message Camion{
  string id =1;
  string tipo =2;
  int32 espera =3;
  
}



//agregar destinos de los paquetes
message Carga{
  Paquete paq1 = 1;
  Paquete paq2 = 2;
  int32 flag = 3;
  string origen1= 4;
  string origen2=5;
  string destino1= 6;
  string destino2 = 7;


}



message Info{
  string id= 1;
  string tipo = 2;
  string estado =3;
  int32 intentos =4;
  int32 valor=5;
  string idseg = 6;


}

message Entrega {
  int32 num = 1;
  Info inf1 = 2;
  Info inf2 = 3;
}

message Respuesta{
  string ack = 1;
}

service ChatService {
  rpc SayHello(Message) returns (Message) {}

  // El cliente genera una orden
  rpc HacerPedido( Orden) returns (Codigo){}

  // El cliente solicita el estado de su pedido
  rpc Estado( Codigo) returns (EstOrden){}

  // LLega al camion y pide carga
  rpc LlegoCamion(Camion) returns (Carga){}

  // El cambion informa si completo las entregas
  rpc EntregaCamion(Entrega) returns (Respuesta){}

}